# Generated by Django 3.2.8 on 2021-11-04 15:37

import datetime
from django.conf import settings
import django.contrib.gis.db.models.fields
import django.contrib.postgres.fields
from django.db import migrations, models
import django.db.models.deletion
import django_fsm
import hashid_field.field


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='User',
            fields=[
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('id', hashid_field.field.HashidAutoField(alphabet='abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ1234567890', min_length=7, prefix='', primary_key=True, serialize=False)),
                ('username', models.CharField(max_length=150, unique=True)),
                ('data', models.JSONField(editable=False, null=True)),
                ('name', models.CharField(blank=True, default='(Unknown)', editable=False, max_length=100, verbose_name='Name')),
                ('email', models.EmailField(max_length=254)),
                ('is_active', models.BooleanField(default=True)),
                ('is_admin', models.BooleanField(default=False)),
                ('is_verified', models.BooleanField(default=False)),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('updated', models.DateTimeField(auto_now=True)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Account',
            fields=[
                ('id', hashid_field.field.HashidAutoField(alphabet='abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ1234567890', min_length=7, prefix='', primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=100)),
                ('is_vip', models.BooleanField(default=False)),
                ('is_steering', models.BooleanField(default=False)),
                ('is_public', models.BooleanField(default=False)),
                ('is_spouse', models.BooleanField(default=False)),
                ('address_too', models.CharField(blank=True, default='', max_length=512)),
                ('address_raw', models.CharField(blank=True, default='', max_length=512)),
                ('address_json', models.JSONField(blank=True, null=True)),
                ('place', models.CharField(blank=True, default='', max_length=255)),
                ('is_precise', models.BooleanField(null=True)),
                ('point', django.contrib.gis.db.models.fields.PointField(blank=True, null=True, srid=4326)),
                ('geocode', models.JSONField(blank=True, null=True)),
                ('picture', models.ImageField(default='wapa/avatar', upload_to='')),
                ('notes', models.TextField(blank=True, default='', max_length=2000)),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('updated', models.DateTimeField(auto_now=True)),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='account', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Event',
            fields=[
                ('id', hashid_field.field.HashidAutoField(alphabet='abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ1234567890', min_length=7, prefix='', primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=100)),
                ('description', models.TextField(blank=True, default='', max_length=2000)),
                ('date', models.DateField(default=datetime.date.today)),
                ('datetime', models.DateTimeField(null=True)),
                ('location', models.CharField(blank=True, default='', max_length=100)),
                ('notes', models.TextField(blank=True, default='', max_length=2000)),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('updated', models.DateTimeField(auto_now=True)),
            ],
        ),
        migrations.CreateModel(
            name='Issue',
            fields=[
                ('id', hashid_field.field.HashidAutoField(alphabet='abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ1234567890', min_length=7, prefix='', primary_key=True, serialize=False)),
                ('state', django_fsm.FSMIntegerField(choices=[(-5, 'Archived'), (0, 'Pending'), (10, 'Active')], default=0)),
                ('name', models.CharField(max_length=100)),
                ('description', models.TextField(blank=True, default='', max_length=2000)),
                ('recipient_name', models.CharField(max_length=100)),
                ('recipient_emails', django.contrib.postgres.fields.ArrayField(base_field=models.EmailField(max_length=254), null=True, size=None)),
                ('date', models.DateField(default=datetime.date.today)),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('updated', models.DateTimeField(auto_now=True)),
            ],
            options={
                'ordering': ('-created',),
            },
        ),
        migrations.CreateModel(
            name='School',
            fields=[
                ('id', hashid_field.field.HashidAutoField(alphabet='abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ1234567890', min_length=7, prefix='', primary_key=True, serialize=False)),
                ('full', models.CharField(max_length=100)),
                ('name', models.CharField(max_length=100)),
                ('nurse_name', models.CharField(blank=True, default='', max_length=100)),
                ('nurse_email', models.EmailField(blank=True, default='', max_length=255)),
                ('school_id', models.IntegerField(blank=True, null=True)),
                ('kind', models.IntegerField(choices=[(10, 'Elementary School'), (20, 'Middle School'), (30, 'High School')], default=0)),
                ('address_raw', models.CharField(blank=True, default='', max_length=512)),
                ('phone_raw', models.CharField(blank=True, default='', max_length=100)),
                ('point', django.contrib.gis.db.models.fields.PointField(blank=True, null=True, srid=4326)),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('updated', models.DateTimeField(auto_now=True)),
            ],
            options={
                'ordering': ('name',),
            },
        ),
        migrations.CreateModel(
            name='Zone',
            fields=[
                ('id', hashid_field.field.HashidAutoField(alphabet='abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ1234567890', min_length=7, prefix='', primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=100)),
                ('num', models.IntegerField(null=True)),
                ('trustee_name', models.CharField(blank=True, default='', max_length=100)),
                ('trustee_email', models.EmailField(blank=True, default='', max_length=100)),
                ('poly', django.contrib.gis.db.models.fields.PolygonField(blank=True, null=True, srid=4326)),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('updated', models.DateTimeField(auto_now=True)),
            ],
        ),
        migrations.CreateModel(
            name='Student',
            fields=[
                ('id', hashid_field.field.HashidAutoField(alphabet='abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ1234567890', min_length=7, prefix='', primary_key=True, serialize=False)),
                ('name', models.CharField(blank=True, default='', max_length=100)),
                ('grade', models.IntegerField(choices=[(-1, 'Pre-K'), (0, 'Kindergarten'), (1, 'First Grade'), (2, 'Second Grade'), (3, 'Third Grade'), (4, 'Fourth Grade'), (5, 'Fifth Grade'), (6, 'Sixth Grade'), (7, 'Seventh Grade'), (8, 'Eighth Grade'), (9, 'Ninth Grade'), (10, 'Tenth Grade'), (11, 'Eleventh Grade'), (12, 'Twelfth Grade')])),
                ('exemption', models.ImageField(blank=True, default='wapa/exemption', null=True, upload_to='')),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('updated', models.DateTimeField(auto_now=True)),
                ('account', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='students', to='app.account')),
                ('school', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='students', to='app.school')),
            ],
            options={
                'ordering': ('grade',),
            },
        ),
        migrations.AddField(
            model_name='school',
            name='zone',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='school', to='app.zone'),
        ),
        migrations.CreateModel(
            name='Isat',
            fields=[
                ('id', hashid_field.field.HashidAutoField(alphabet='abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ1234567890', min_length=7, prefix='', primary_key=True, serialize=False)),
                ('subject', models.IntegerField(choices=[(10, 'English'), (20, 'Math'), (30, 'Science')], null=True)),
                ('grade', models.IntegerField(choices=[(1, 'All'), (3, 'Third'), (4, 'Fourth Grade'), (5, 'Fifth Grade'), (6, 'Sixth Grade'), (7, 'Seventh Grade'), (8, 'Eighth Grade'), (10, 'High School')], null=True)),
                ('advanced_note', models.CharField(blank=True, max_length=10)),
                ('proficient_note', models.CharField(blank=True, max_length=10)),
                ('basic_note', models.CharField(blank=True, max_length=10)),
                ('below_note', models.CharField(blank=True, max_length=10)),
                ('advanced', models.FloatField(blank=True, null=True)),
                ('proficient', models.FloatField(blank=True, null=True)),
                ('basic', models.FloatField(blank=True, null=True)),
                ('below', models.FloatField(blank=True, null=True)),
                ('year', models.IntegerField()),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('updated', models.DateTimeField(auto_now=True)),
                ('school', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='isats', to='app.school')),
            ],
        ),
        migrations.CreateModel(
            name='Comment',
            fields=[
                ('id', hashid_field.field.HashidAutoField(alphabet='abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ1234567890', min_length=7, prefix='', primary_key=True, serialize=False)),
                ('state', django_fsm.FSMIntegerField(choices=[(-10, 'Denied'), (-5, 'Archived'), (0, 'Pending'), (10, 'Approved')], default=0)),
                ('is_featured', models.BooleanField(default=False)),
                ('content', models.TextField(max_length=2000)),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('updated', models.DateTimeField(auto_now=True)),
                ('account', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='comments', to='app.account')),
                ('issue', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='comments', to='app.issue')),
            ],
            options={
                'ordering': ('-created',),
            },
        ),
        migrations.CreateModel(
            name='Attendee',
            fields=[
                ('id', hashid_field.field.HashidAutoField(alphabet='abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ1234567890', min_length=7, prefix='', primary_key=True, serialize=False)),
                ('is_confirmed', models.BooleanField(default=False)),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('updated', models.DateTimeField(auto_now=True)),
                ('account', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='attendees', to='app.account')),
                ('event', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='attendees', to='app.event')),
            ],
        ),
        migrations.AddField(
            model_name='account',
            name='zone',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='account', to='app.zone'),
        ),
        migrations.AddConstraint(
            model_name='comment',
            constraint=models.UniqueConstraint(fields=('account', 'issue'), name='unique_comment'),
        ),
        migrations.AddConstraint(
            model_name='attendee',
            constraint=models.UniqueConstraint(fields=('account', 'event'), name='unique_attendee'),
        ),
    ]
